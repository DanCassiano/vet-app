[{"/home/andrews_souza/Projects/vet-app/src/index.js":"1","/home/andrews_souza/Projects/vet-app/src/App.js":"2","/home/andrews_souza/Projects/vet-app/src/Router.js":"3","/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js":"4","/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js":"5","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js":"6","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js":"7","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js":"8","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js":"9","/home/andrews_souza/Projects/vet-app/src/components/menu.js":"10","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js":"11","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js":"12","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js":"13","/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js":"14","/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js":"15","/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js":"16","/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js":"17","/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js":"18","/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js":"19","/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js":"20","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js":"21","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js":"22","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js":"23","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js":"24","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js":"25","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js":"26","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js":"27","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js":"28","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js":"29","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js":"30","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js":"31","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js":"32","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js":"33","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js":"34","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js":"35","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js":"36"},{"size":650,"mtime":1632685300628,"results":"37","hashOfConfig":"38"},{"size":145,"mtime":1632685300628,"results":"39","hashOfConfig":"38"},{"size":1920,"mtime":1632767325282,"results":"40","hashOfConfig":"38"},{"size":12340,"mtime":1632710398394,"results":"41","hashOfConfig":"38"},{"size":4683,"mtime":1632685300632,"results":"42","hashOfConfig":"38"},{"size":12686,"mtime":1632756102636,"results":"43","hashOfConfig":"38"},{"size":2718,"mtime":1632685300632,"results":"44","hashOfConfig":"38"},{"size":3110,"mtime":1632688549574,"results":"45","hashOfConfig":"38"},{"size":9161,"mtime":1632710421522,"results":"46","hashOfConfig":"38"},{"size":4576,"mtime":1632685300628,"results":"47","hashOfConfig":"38"},{"size":2834,"mtime":1632709356285,"results":"48","hashOfConfig":"38"},{"size":1666,"mtime":1632685300632,"results":"49","hashOfConfig":"38"},{"size":883,"mtime":1632685300632,"results":"50","hashOfConfig":"38"},{"size":2160,"mtime":1632685300628,"results":"51","hashOfConfig":"38"},{"size":203,"mtime":1632685300636,"results":"52","hashOfConfig":"38"},{"size":1039,"mtime":1632685300636,"results":"53","hashOfConfig":"38"},{"size":1300,"mtime":1632688329377,"results":"54","hashOfConfig":"38"},{"size":1120,"mtime":1632685300640,"results":"55","hashOfConfig":"38"},{"size":1569,"mtime":1632761528757,"results":"56","hashOfConfig":"38"},{"size":4799,"mtime":1632928095898,"results":"57","hashOfConfig":"38"},{"size":2132,"mtime":1632699369084,"results":"58","hashOfConfig":"38"},{"size":4037,"mtime":1632700642177,"results":"59","hashOfConfig":"38"},{"size":4017,"mtime":1632700920058,"results":"60","hashOfConfig":"38"},{"size":4036,"mtime":1632700758140,"results":"61","hashOfConfig":"38"},{"size":6028,"mtime":1632931208141,"results":"62","hashOfConfig":"38"},{"size":5098,"mtime":1632931998023,"results":"63","hashOfConfig":"38"},{"size":4452,"mtime":1632876276557,"results":"64","hashOfConfig":"38"},{"size":4036,"mtime":1632700863088,"results":"65","hashOfConfig":"38"},{"size":2539,"mtime":1632782240174,"results":"66","hashOfConfig":"38"},{"size":11223,"mtime":1632930862354,"results":"67","hashOfConfig":"38"},{"size":13491,"mtime":1632930876613,"results":"68","hashOfConfig":"38"},{"size":4207,"mtime":1632780545643,"results":"69","hashOfConfig":"38"},{"size":2588,"mtime":1632931191523,"results":"70","hashOfConfig":"38"},{"size":2555,"mtime":1632876188858,"results":"71","hashOfConfig":"38"},{"size":4207,"mtime":1632876178694,"results":"72","hashOfConfig":"38"},{"size":3598,"mtime":1632932493222,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1ewsjpn",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"76"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/andrews_souza/Projects/vet-app/src/index.js",[],["162","163"],"/home/andrews_souza/Projects/vet-app/src/App.js",[],"/home/andrews_souza/Projects/vet-app/src/Router.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js",["164","165","166"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport InputMask from \"react-input-mask\";\nimport Button from '@material-ui/core/Button';\nimport Pets from '@material-ui/icons/Pets'\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { creatAnimal } from '../../redux/actions';\n\nconst caes = ['Pastor-Alemão', 'Labrador', 'Zwergspitz', 'Husky', 'Golden', 'Buldogue', 'Poodle', 'Pit-Bull', 'Chihuahua', 'Shiba Inu', 'Rottweiler', 'Bobermann', 'Pug', 'Dachshulund'];\nconst gatos = ['Persa', ' Maine Coon', 'Siamês', 'Gato Inglês', 'Ragdoll', 'Munchkin', 'Norueguês', 'Siberiano'];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        padding: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column'\n    },\n    fixedHeight: {\n        height: 350,\n    },\n    Button: {\n        marginBottom: 'auto'\n    },\n    pets: {\n        marginLeft: '10px'\n    }\n}));\n\nconst AdicionarAnimals = ({ creatAnimal }) => {\n\n    const [values, setValues] = useState();\n    const [created, setCreated] = useState(false);\n    const history = useHistory();\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    const [especie, setEspecie] = useState(null);\n\n    const selectEspecie = (ev) => {\n        const selected = ev.target.value\n        setEspecie(selected)\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        creatAnimal(values)\n        setCreated(true)\n    };\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n       \n    }\n    const callTowFunction = (ev) =>{\n        onChange(ev)\n        selectEspecie(ev)\n    }\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Pets\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <h1>\n                        Cadastrar Pet\n                    </h1>\n                    <form onSubmit={onSubmit}>\n                        <Grid item sm={10}>\n                            <Paper className={fixedHeightPaper}>\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            required\n                                            id=\"nome\"\n                                            name=\"nome\"\n                                            label=\"Nome\"\n                                            fullWidth\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"999.999.999-99\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"cpf\"\n                                            name=\"cpf\"\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"CPF do Dono\" required name=\"cpf\" />}\n                                        </InputMask>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Espécie</InputLabel>\n                                            <Select\n                                                name=\"especie\"\n                                                onChange={callTowFunction}\n                                                native\n                                            >\n\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value={'Cachorro'}>Cachorro</option>\n                                                <option value={'Gato'}>Gato</option>\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Raça</InputLabel>\n                                            <Select\n                                                name=\"raca\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                {\n                                                    especie && especie === 'Cachorro' ? caes.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n                                                {\n                                                    especie && especie === 'Gato' ? gatos.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Pelagem</InputLabel>\n                                            <Select\n                                                name=\"pelagem\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Curto'>Curto</option>\n                                                <option value='Médio'>Médio</option>\n                                                <option value='Alto'>Alto</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"idade\"\n                                            name=\"idade\"\n                                            label=\"Idade\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Sexo</InputLabel>\n                                            <Select\n                                                name='sexo'\n                                                native\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Femea'>Femea</option>\n                                                <option value='Macho'>Macho</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"peso\"\n                                            name=\"peso\"\n                                            label=\"Peso\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Temperamento</InputLabel>\n                                            <Select\n                                                native\n                                                name='temperamento'\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Calmo'>Calmo</option>\n                                                <option value='Bravo'>Bravo</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                                            Adicionar\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </form>\n                </Container>\n            </main>\n            <ToastContainer />\n        </div>\n    );\n};\n\n\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    creatAnimal\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarAnimals);","/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js",["167","168","169"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link } from 'react-router-dom'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { userAuthenticate, stateReducer } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignIn = ({userAuthenticate, stateReducer}) => {\n    const classes = useStyles();\n    const initialState = {\n        email: \"\",\n        password: \"\",\n    };\n\n    const { success, loading } = stateReducer;\n    const history = useHistory();\n    const [values, setValues] = useState(initialState);\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        await userAuthenticate(values)\n    };\n\n    useEffect(() => {\n        if (success) {\n            const timer = setTimeout(() => {\n                history.push('/dashboard')\n            }, 1000);\n            return () => clearTimeout(timer);\n        }\n    }, [success]);\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    return (\n\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={onSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={onChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            onChange={onChange}\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                       \n                            <Button\n\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                type=\"submit\"\n                            >\n                                {loading ? ('loading'): ('SingIn')}\n                            </Button>\n                        \n                    </form>\n                </div>\n                <ToastContainer/>\n            </Container>\n            \n       \n    );\n};\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user\n})\n\nconst mapDispatch = dispatch => bindActionCreators({\n    userAuthenticate\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatch)(SignIn);","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js",["170","171","172","173"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport InputMask from \"react-input-mask\";\nimport Button from '@material-ui/core/Button';\nimport Pets from '@material-ui/icons/Pets'\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { fetchAnimals, creatPessoa } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        padding: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column'\n    },\n    fixedHeight: {\n        height: 350,\n    },\n    Button: {\n        marginBottom: 'auto'\n    },\n    pets: {\n        marginLeft: '10px'\n    }\n}));\n\nconst Animais = ({ fetchAnimals, creatPessoa, stateReducer, stateReducerUser, stateAll }) => {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    const history = useHistory();\n    const [values, setValues] = useState({});\n\n    const [nome, setNome] = useState()\n    const [cpf, setCPF] = useState()\n    const [email, setEmail] = useState()\n    const [telefone, setTelefone] = useState()\n    const [sus, setSus] = useState()\n\n    const [cep, setCep] = useState()\n\n    const [endereco, setEndereco] = useState()\n    const [bairro, setBairro] = useState()\n    const [numero, setNumero] = useState()\n    const [uf, setUf] = useState()\n\n\n    const showPetCadastro = () => {\n        history.push('/pets/adicionar')\n    };\n    const setAllValues = () => {\n        setNome('')\n        setCPF('')\n        setEmail('')\n        setEmail('')\n        setTelefone('')\n        setSus('')\n\n        setCep('')\n        setEndereco('')\n        setBairro('')\n        setNumero('')\n        setUf('')\n    } \n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n\n    };\n\n    const fetchCep = async (data) => {\n        const options = {\n            method: 'GET',\n            mode: 'cors',\n            cache: 'default'\n        }\n        const cep = await fetch(`https://viacep.com.br/ws/${data}/json/`, options).then(resp => {\n            return resp.json()\n        })\n        return cep\n    };\n\n    let cepConsumer = values ? values.cep : null\n\n    useEffect(async () => {\n        if (cepConsumer != null && cepConsumer.length >= 8) {\n            cepConsumer = cepConsumer.replace('-', '')\n            const cep = await fetchCep(cepConsumer)\n            \n            if (cep) {\n                setUf(cep.uf)\n                setBairro(cep.bairro)\n                setNumero()\n                setEndereco(cep.logradouro)\n            }\n        }\n    }, [cepConsumer])\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        creatPessoa(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Pets\" />\n            <main className={classes.content}>\n\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <h1>\n                        Responsável\n                    </h1>\n                    <form onSubmit={onSubmit}>\n                        <Grid item sm={10}>\n                            <Paper className={fixedHeightPaper}>\n\n                                <Grid container spacing={4}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"nome\"\n                                            name=\"nome\"\n                                            label=\"Nome\"\n                                            fullWidth\n                                            value={nome}\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"999.999.999-99\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"cpf\"\n                                            name=\"cpf\"\n                                            value={cpf}\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"CPF\" required name=\"cpf\" />}\n                                        </InputMask>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            onChange={onChange}\n                                            type=\"email\"\n                                            id=\"email\"\n                                            name=\"email\"\n                                            label=\"Email\"\n                                            fullWidth\n                                            autoComplete=\"shipping address-line1\"\n                                            value={email}\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"(99) - 9 9999-9999\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"celular\"\n                                            name=\"telefone\"\n                                            value={telefone}\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"Celular\" name=\"telefone\" />}\n                                        </InputMask>\n                                    </Grid>\n\n                                </Grid>\n                                <Grid container spacing={3}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            onChange={onChange}\n                                            id=\"sus\"\n                                            name=\"sus\"\n                                            label=\"Carteirinha do SUS\"\n                                            fullWidth\n                                            value={sus}\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"99999-999\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"cep\"\n                                            name=\"cep\"\n                                            value={cep}\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"CEP\" required name=\"cep\" />}\n                                        </InputMask>\n                                    </Grid>\n                                </Grid>\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            id=\"endereco\"\n                                            name=\"endereco\"\n                                            label=\"Endereço\"\n                                            fullWidth\n                                            value={endereco}\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            id=\"bairro\"\n                                            name=\"bairro\"\n                                            label=\"Bairro\"\n                                            fullWidth\n                                            value={bairro}\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            id=\"numero\"\n                                            name=\"numero\"\n                                            label=\"Número\"\n                                            value={numero}\n                                            fullWidth\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            id=\"uf\"\n                                            name=\"uf\"\n                                            label=\"UF\"\n                                            value={uf}\n                                            fullWidth\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                                            Salvar\n                                        </Button>\n\n                                        <Button className={classes.pets} onClick={showPetCadastro} variant=\"contained\" color=\"primary\">\n                                            <Pets />\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </form>\n                </Container>\n            </main>\n            <ToastContainer />\n        </div>\n    );\n};\n\n\nconst mapStateToProps = state => ({\n    stateReducer: state.animals,\n    stateReducerUser: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    creatPessoa\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(Animais)","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js",["174","175"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport Chart from './chart';\nimport Orders from './orders';\nimport Deposits from './deposits';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nexport default function Dashboard() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Dashboard\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={8} lg={9}>\n                            <Paper className={fixedHeightPaper}>\n                                <Chart />\n                            </Paper>\n                        </Grid>\n                        {/* Recent Deposits */}\n                        <Grid item xs={12} md={4} lg={3}>\n                            <Paper className={fixedHeightPaper}>\n                                <Deposits />\n                            </Paper>\n                        </Grid>\n                        {/* Recent Orders */}\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                <Orders />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                </Container>\n            </main>\n        </div >\n    );\n}","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js",["176","177","178","179"],"import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport Button from '@material-ui/core/Button';\nimport { Divider } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport CardAnimal from './cardAnimal'\nimport { fetchAnimals } from '../../redux/actions';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n        \n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'row',\n        flexWrap:\"nowrap\"\n    },\n    fixedHeight: {\n        height: 300,\n    },\n    hr: {\n        marginTop: '60px',\n        border: '1px solid '\n    },\n    title: {\n        fontSize: '30px',\n        fontFamily: 'Patua One',\n        position: 'absolute',\n        marginTop: '10px'\n    }\n}));\n\n\n\nconst Atendimento = ({ fetchAnimals, stateReducer }) => {\n\n    useEffect(async () => {\n        await fetchAnimals()\n    }, [])\n\n    let dados = stateReducer.animals;\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Atendimento\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <Typography className={classes.title}>Animais</Typography>\n                    <Divider className={classes.hr} light=\"true\" />\n\n                    <Paper className={fixedHeightPaper}>\n                        {\n                            dados.length > 0 && dados.map(el => <CardAnimal data={el}></CardAnimal>)\n                        }\n                    </Paper>\n                    <Box pt={4}>\n                        {/* <Footer /> */}\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    stateReducer: state.animals,\n    stateReducerUser: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(Atendimento);","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js",["180","181","182"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport InputMask from \"react-input-mask\";\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { createUser, stateReducer, stateAll } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 350,\n    },\n}));\n\nconst CreatedUser = ({ createUser, stateReducer, stateAll }) => {\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n\n    const { success, loading } = stateReducer;\n    const [values, setValues] = useState();\n    const history = useHistory();\n\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n        \n    };\n\n    const onSubmit = async (ev) => {\n        \n        ev.preventDefault();\n        createUser(values)\n    };\n\n    useEffect(() => {\n        if (success) {\n            const timer = setTimeout(() => {\n                history.push('/dashboard')\n            }, 1000);\n            return () => clearTimeout(timer);\n        }\n    }, [success]);\n\n    return (\n        <form onSubmit={onSubmit}>\n            <div className={classes.root}>\n                <CssBaseline />\n                <Menu msg=\"Usuarios\" />\n                <main className={classes.content}>\n                    <div className={classes.appBarSpacer} />\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                        <Grid item sm={10}>\n\n                            <Paper className={fixedHeightPaper}>\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            required\n                                            id=\"nome\"\n                                            name=\"nome\"\n                                            label=\"Nome\"\n                                            fullWidth\n                                            autoComplete=\"shipping address-line1\"\n                                            onChange={onChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"999.999.999-99\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"cpf\"\n                                            name=\"cpf\"\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"CPF\" required name=\"cpf\" />}\n                                        </InputMask>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"(99) - 9 9999-9999\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"celular\"\n                                            name=\"telefone\"\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"Celular\" name=\"telefone\" />}\n                                        </InputMask>\n                                    </Grid>\n\n                                </Grid>\n                                <Grid container spacing={3}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"crmv\"\n                                            name=\"crmv\"\n                                            label=\"Crmv\"\n                                            fullWidth\n                                            onChange={onChange}\n                                        />\n                                    </Grid>\n\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item  >Função</InputLabel>\n                                            <Select\n                                                name=\"funcao\"  onChange={onChange}\n                                                native\n                                                \n                                            >   \n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value={'Administrativo'}>Administrativo</option>\n                                                <option value={'Médico'}>Médico</option>\n                                                <option value={'Recepcionista'}>Recepcionista</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            type=\"email\"\n                                            id=\"email\"\n                                            name=\"email\"\n                                            label=\"Email\"\n                                            fullWidth\n                                            autoComplete=\"shipping address-line1\"\n                                            onChange={onChange}\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            type=\"password\"\n                                            required\n                                            id=\"senha\"\n                                            name=\"senha\"\n                                            label=\"Senha\"\n                                            fullWidth\n                                            autoComplete=\"shipping address-line1\"\n                                            onChange={onChange}\n\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                                            {loading ? ('loading') : ('Salvar')}\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </Container>\n                </main>\n\n            </div>\n            <ToastContainer />\n        </form>\n    );\n};\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user,\n    stateAll: state\n})\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createUser\n}, dispatch)\n\n\nexport default connect(mapStateToProps, mapDispatch)(CreatedUser);","/home/andrews_souza/Projects/vet-app/src/components/menu.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js",["183","184","185"],"import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n    return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n    createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n    createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n    createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n    createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nexport default function Orders() {\n    const classes = useStyles();\n    return (\n        <>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Date</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Ship To</TableCell>\n                        <TableCell>Payment Method</TableCell>\n                        <TableCell align=\"right\">Sale Amount</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.id}>\n                            <TableCell>{row.date}</TableCell>\n                            <TableCell>{row.name}</TableCell>\n                            <TableCell>{row.shipTo}</TableCell>\n                            <TableCell>{row.paymentMethod}</TableCell>\n                            <TableCell align=\"right\">{row.amount}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n}","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js",[],"/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js",["186","187","188"],"import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport { Card, CardActions, CardContent } from '@material-ui/core';\nimport Prontuario from './prontuario';\n\nconst useStyles = makeStyles((theme) => ({\n    Card: {\n        width: '200px'\n    }\n}));\n\nconst bull = (\n    <Box\n        component=\"span\"\n        sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n    >\n        •\n    </Box>\n);\nconst CardAnimal = ({ data }) => {\n    const history = useHistory()\n    const { nome, idade, raca, especie, sexo, pelagem, temperamento, peso, _id:id } = data;\n    const onClick = () => {\n        history.push(`pets/prontuario/${id}`)\n    };\n\n    const classes = useStyles();\n\n\n    return (\n        <Card className={classes.Card}>\n            <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    {especie}\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                    {nome}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Raça: {raca}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Idade: {idade}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Sexo: {sexo}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Peso: {peso}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Temperamento: {temperamento}\n                </Typography>\n\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" onClick={onClick}>Prontuário</Button>\n            </CardActions>\n        </Card>\n    )\n};\n\nexport default CardAnimal;","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js",["189"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../components/menu';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 80,\n\n    },\n    aaa: {  \n        display:\"flex\",\n        justifyContent:\"space-between\",\n        padding: \"18px\"\n    }\n}));\n\nconst Prontuario = () => {\n    const history = useHistory();\n    const { id } = useParams();\n    const onClick = (ev) => {\n        const types = ev.target.innerText\n        switch (types) {\n\n            case 'PRONTUARIO': {\n                return history.push(`/pets/prontuario/${id}`)\n            }\n            \n            case 'TRATAMENTOS': {\n                return history.push(`/pets/tratamentos/${id}`)\n            }\n\n            case 'ALERGIAS': {\n                return history.push(`/pets/alergias/${id}`)\n            }\n\n            case 'MEDICAMENTO': {\n                return history.push(`/pets/medicamentos/${id}`)\n            }\n\n            case 'VACINAS': {\n                return history.push(`/pets/vacinas/${id}`)\n            }\n\n            case 'VERMIFUGO': {\n                return history.push(`/pets/vermifugos/${id}`)\n            }\n\n            case 'DADOS': {\n                return history.push(`/pets/dados/${id}`)\n            }\n\n            default:\n                return history.push('/dashboard')\n            }\n        }\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Atendimento\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid item sm={12}>\n                        <Paper className={fixedHeightPaper}>\n                            <Grid container spacing={3} className={classes.aaa}>\n                                <Button variant=\"outlined\" onClick={onClick} >Prontuario</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Tratamentos</Button>\n                                <Button variant=\"contained\" onClick={onClick}>Alergias</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Medicamento</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Vacinas</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Vermifugo</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Dados</Button>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Box pt={4}>\n                        {/* <Footer /> */}\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n};\n\nexport default Prontuario","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js",["190"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../components/menu';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 80,\n\n    },\n    aaa: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"18px\"\n    }\n}));\n\nconst Prontuario = () => {\n\n    const history = useHistory();\n    const { id } = useParams();\n    const onClick = (ev) => {\n        const types = ev.target.innerText\n        switch (types) {\n\n            case 'PRONTUARIO': {\n                return history.push(`/pets/prontuario/${id}`)\n            }\n\n            case 'TRATAMENTOS': {\n                return history.push(`/pets/tratamentos/${id}`)\n            }\n\n            case 'ALERGIAS': {\n                return history.push(`/pets/alergias/${id}`)\n            }\n\n            case 'MEDICAMENTO': {\n                return history.push(`/pets/medicamentos/${id}`)\n            }\n\n            case 'VACINAS': {\n                return history.push(`/pets/vacinas/${id}`)\n            }\n\n            case 'VERMIFUGO': {\n                return history.push(`/pets/vermifugos/${id}`)\n            }\n\n            case 'DADOS': {\n                return history.push(`/pets/dados/${id}`)\n            }\n\n            default:\n                return history.push('/dashboard')\n        }\n    }\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Atendimento\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid item sm={12}>\n                        <Paper className={fixedHeightPaper}>\n                            <Grid container spacing={3} className={classes.aaa}>\n                                <Button variant=\"outlined\" onClick={onClick}>Prontuario</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Tratamentos</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Alergias</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Medicamento</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Vacinas</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Vermifugo</Button>\n                                <Button variant=\"contained\" onClick={onClick}>Dados</Button>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Box pt={4}>\n                        {/* <Footer /> */}\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n};\n\nexport default Prontuario","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js",["191"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../components/menu';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 80,\n\n    },\n    aaa: {  \n        display:\"flex\",\n        justifyContent:\"space-between\",\n        padding: \"18px\"\n    }\n}));\n\nconst Prontuario = () => {\n    const history = useHistory();\n    const { id } = useParams();\n    const onClick = (ev) => {\n        const types = ev.target.innerText\n        switch (types) {\n\n            case 'PRONTUARIO': {\n                return history.push(`/pets/prontuario/${id}`)\n            }\n            \n            case 'TRATAMENTOS': {\n                return history.push(`/pets/tratamentos/${id}`)\n            }\n\n            case 'ALERGIAS': {\n                return history.push(`/pets/alergias/${id}`)\n            }\n\n            case 'MEDICAMENTO': {\n                return history.push(`/pets/medicamentos/${id}`)\n            }\n\n            case 'VACINAS': {\n                return history.push(`/pets/vacinas/${id}`)\n            }\n\n            case 'VERMIFUGO': {\n                return history.push(`/pets/vermifugos/${id}`)\n            }\n\n            case 'DADOS': {\n                return history.push(`/pets/dados/${id}`)\n            }\n\n            default:\n                return history.push('/dashboard')\n            }\n        }\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Atendimento\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid item sm={12}>\n                        <Paper className={fixedHeightPaper}>\n                            <Grid container spacing={3} className={classes.aaa}>\n                                <Button variant=\"outlined\" onClick={onClick}>Prontuario</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Tratamentos</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Alergias</Button>\n                                <Button variant=\"contained\" onClick={onClick}>Medicamento</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Vacinas</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Vermifugo</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Dados</Button>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Box pt={4}>\n                        {/* <Footer /> */}\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n};\n\nexport default Prontuario","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js",["192"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../components/menu';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 80,\n\n    },\n    aaa: {  \n        display:\"flex\",\n        justifyContent:\"space-between\",\n        padding: \"18px\"\n    }\n}));\n\nconst Prontuario = () => {\n    const history = useHistory();\n    const { id } = useParams();\n    const onClick = (ev) => {\n        const types = ev.target.innerText\n        switch (types) {\n\n            case 'PRONTUARIO': {\n                return history.push(`/pets/prontuario/${id}`)\n            }\n            \n            case 'TRATAMENTOS': {\n                return history.push(`/pets/tratamentos/${id}`)\n            }\n\n            case 'ALERGIAS': {\n                return history.push(`/pets/alergias/${id}`)\n            }\n\n            case 'MEDICAMENTO': {\n                return history.push(`/pets/medicamentos/${id}`)\n            }\n\n            case 'VACINAS': {\n                return history.push(`/pets/vacinas/${id}`)\n            }\n\n            case 'VERMIFUGO': {\n                return history.push(`/pets/vermifugos/${id}`)\n            }\n\n            case 'DADOS': {\n                return history.push(`/pets/dados/${id}`)\n            }\n\n            default:\n                return history.push('/dashboard')\n            }\n        }\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Atendimento\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid item sm={12}>\n                        <Paper className={fixedHeightPaper}>\n                            <Grid container spacing={3} className={classes.aaa}>\n                                <Button variant=\"outlined\" onClick={onClick}>Prontuario</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Tratamentos</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Alergias</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Medicamento</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Vacinas</Button>\n                                <Button variant=\"contained\" onClick={onClick}>Vermifugo</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Dados</Button>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Box pt={4}>\n                        {/* <Footer /> */}\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n};\n\nexport default Prontuario","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js",["193","194","195","196","197"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewProntuario }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = animalReducer.animals\n    const redenrTable = animal.filter(el => el._id === data)\n    const classes = useStyles();\n    const showView = e => {\n        viewProntuario(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Descrição</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].prontuarios.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.descricao}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js",["198"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js",["199"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js",["200"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createTratamento } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createTratamento, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createTratamento(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Tratamentos</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"Tratramento\"\n                                name=\"tratamento\"\n                                label=\"Tratramento\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createTratamento\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js",["201","202","203","204","205","206"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js",["207","208","209","210","211","212"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = animalReducer.animals\n    const redenrTable = animal.filter(el => el._id === data)\n    const classes = useStyles();\n    const showView = e => {\n        \n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Tratamento</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].tratamentos.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.tratamento}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js",["213"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js",["214","215","216"],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","severity":1,"message":"222","line":13,"column":8,"nodeType":"223","messageId":"224","endLine":13,"endColumn":12},{"ruleId":"221","severity":1,"message":"225","line":70,"column":12,"nodeType":"223","messageId":"224","endLine":70,"endColumn":19},{"ruleId":"221","severity":1,"message":"226","line":71,"column":11,"nodeType":"223","messageId":"224","endLine":71,"endColumn":18},{"ruleId":"221","severity":1,"message":"227","line":9,"column":10,"nodeType":"223","messageId":"224","endLine":9,"endColumn":14},{"ruleId":"221","severity":1,"message":"228","line":19,"column":28,"nodeType":"223","messageId":"224","endLine":19,"endColumn":40},{"ruleId":"229","severity":1,"message":"230","line":64,"column":8,"nodeType":"231","endLine":64,"endColumn":17,"suggestions":"232"},{"ruleId":"221","severity":1,"message":"233","line":19,"column":10,"nodeType":"223","messageId":"224","endLine":19,"endColumn":22},{"ruleId":"221","severity":1,"message":"234","line":83,"column":11,"nodeType":"223","messageId":"224","endLine":83,"endColumn":23},{"ruleId":"229","severity":1,"message":"235","line":118,"column":15,"nodeType":"236","endLine":130,"endColumn":6},{"ruleId":"229","severity":1,"message":"237","line":120,"column":27,"nodeType":"238","endLine":120,"endColumn":55},{"ruleId":"221","severity":1,"message":"239","line":5,"column":8,"nodeType":"223","messageId":"224","endLine":5,"endColumn":11},{"ruleId":"221","severity":1,"message":"240","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":17},{"ruleId":"221","severity":1,"message":"241","line":1,"column":17,"nodeType":"223","messageId":"224","endLine":1,"endColumn":25},{"ruleId":"221","severity":1,"message":"242","line":9,"column":8,"nodeType":"223","messageId":"224","endLine":9,"endColumn":14},{"ruleId":"229","severity":1,"message":"235","line":65,"column":15,"nodeType":"236","endLine":67,"endColumn":6},{"ruleId":"229","severity":1,"message":"243","line":67,"column":8,"nodeType":"231","endLine":67,"endColumn":10,"suggestions":"244"},{"ruleId":"221","severity":1,"message":"228","line":21,"column":22,"nodeType":"223","messageId":"224","endLine":21,"endColumn":34},{"ruleId":"221","severity":1,"message":"245","line":21,"column":36,"nodeType":"223","messageId":"224","endLine":21,"endColumn":44},{"ruleId":"229","severity":1,"message":"230","line":85,"column":8,"nodeType":"231","endLine":85,"endColumn":17,"suggestions":"246"},{"ruleId":"221","severity":1,"message":"227","line":2,"column":8,"nodeType":"223","messageId":"224","endLine":2,"endColumn":12},{"ruleId":"221","severity":1,"message":"247","line":28,"column":10,"nodeType":"223","messageId":"224","endLine":28,"endColumn":24},{"ruleId":"221","severity":1,"message":"248","line":39,"column":11,"nodeType":"223","messageId":"224","endLine":39,"endColumn":18},{"ruleId":"221","severity":1,"message":"249","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":18},{"ruleId":"221","severity":1,"message":"250","line":16,"column":7,"nodeType":"223","messageId":"224","endLine":16,"endColumn":11},{"ruleId":"221","severity":1,"message":"251","line":26,"column":47,"nodeType":"223","messageId":"224","endLine":26,"endColumn":54},{"ruleId":"221","severity":1,"message":"240","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":17},{"ruleId":"221","severity":1,"message":"240","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":17},{"ruleId":"221","severity":1,"message":"240","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":17},{"ruleId":"221","severity":1,"message":"240","line":8,"column":8,"nodeType":"223","messageId":"224","endLine":8,"endColumn":17},{"ruleId":"221","severity":1,"message":"241","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"229","severity":1,"message":"235","line":24,"column":15,"nodeType":"236","endLine":26,"endColumn":6},{"ruleId":"229","severity":1,"message":"243","line":26,"column":7,"nodeType":"231","endLine":26,"endColumn":9,"suggestions":"252"},{"ruleId":"221","severity":1,"message":"226","line":27,"column":11,"nodeType":"223","messageId":"224","endLine":27,"endColumn":18},{"ruleId":"221","severity":1,"message":"248","line":30,"column":11,"nodeType":"223","messageId":"224","endLine":30,"endColumn":18},{"ruleId":"221","severity":1,"message":"253","line":76,"column":11,"nodeType":"223","messageId":"224","endLine":76,"endColumn":27},{"ruleId":"221","severity":1,"message":"253","line":97,"column":11,"nodeType":"223","messageId":"224","endLine":97,"endColumn":27},{"ruleId":"221","severity":1,"message":"253","line":72,"column":11,"nodeType":"223","messageId":"224","endLine":72,"endColumn":27},{"ruleId":"221","severity":1,"message":"241","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"221","severity":1,"message":"254","line":14,"column":8,"nodeType":"223","messageId":"224","endLine":14,"endColumn":15},{"ruleId":"229","severity":1,"message":"235","line":24,"column":15,"nodeType":"236","endLine":26,"endColumn":6},{"ruleId":"229","severity":1,"message":"243","line":26,"column":7,"nodeType":"231","endLine":26,"endColumn":9,"suggestions":"255"},{"ruleId":"221","severity":1,"message":"226","line":27,"column":11,"nodeType":"223","messageId":"224","endLine":27,"endColumn":18},{"ruleId":"221","severity":1,"message":"248","line":30,"column":11,"nodeType":"223","messageId":"224","endLine":30,"endColumn":18},{"ruleId":"221","severity":1,"message":"241","line":1,"column":27,"nodeType":"223","messageId":"224","endLine":1,"endColumn":35},{"ruleId":"221","severity":1,"message":"254","line":14,"column":8,"nodeType":"223","messageId":"224","endLine":14,"endColumn":15},{"ruleId":"229","severity":1,"message":"235","line":24,"column":15,"nodeType":"236","endLine":26,"endColumn":6},{"ruleId":"229","severity":1,"message":"243","line":26,"column":7,"nodeType":"231","endLine":26,"endColumn":9,"suggestions":"256"},{"ruleId":"221","severity":1,"message":"226","line":27,"column":11,"nodeType":"223","messageId":"224","endLine":27,"endColumn":18},{"ruleId":"221","severity":1,"message":"248","line":30,"column":11,"nodeType":"223","messageId":"224","endLine":30,"endColumn":18},{"ruleId":"221","severity":1,"message":"253","line":72,"column":11,"nodeType":"223","messageId":"224","endLine":72,"endColumn":27},{"ruleId":"221","severity":1,"message":"257","line":47,"column":16,"nodeType":"223","messageId":"224","endLine":47,"endColumn":23},{"ruleId":"221","severity":1,"message":"258","line":48,"column":17,"nodeType":"223","messageId":"224","endLine":48,"endColumn":25},{"ruleId":"221","severity":1,"message":"253","line":71,"column":9,"nodeType":"223","messageId":"224","endLine":71,"endColumn":25},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"no-unused-vars","'Pets' is defined but never used.","Identifier","unusedVar","'created' is assigned a value but never used.","'history' is assigned a value but never used.","'Link' is defined but never used.","'stateReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["261"],"'fetchAnimals' is defined but never used.","'setAllValues' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'cepConsumer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Box' is defined but never used.","'TextField' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAnimals'. Either include it or remove the dependency array. If 'fetchAnimals' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["262"],"'stateAll' is defined but never used.",["263"],"'preventDefault' is defined but never used.","'classes' is assigned a value but never used.","'Prontuario' is defined but never used.","'bull' is assigned a value but never used.","'pelagem' is assigned a value but never used.",["264"],"'fixedHeightPaper' is assigned a value but never used.","'NoteAdd' is defined but never used.",["265"],["266"],"'setPeso' is assigned a value but never used.","'setIdade' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"267","fix":"271"},{"desc":"269","fix":"272"},{"desc":"269","fix":"273"},{"desc":"269","fix":"274"},"Update the dependencies array to be: [history, success]",{"range":"275","text":"276"},"Update the dependencies array to be: [fetchAnimals]",{"range":"277","text":"278"},{"range":"279","text":"276"},{"range":"280","text":"278"},{"range":"281","text":"278"},{"range":"282","text":"278"},[2015,2024],"[history, success]",[1822,1824],"[fetchAnimals]",[2516,2525],[904,906],[953,955],[937,939]]