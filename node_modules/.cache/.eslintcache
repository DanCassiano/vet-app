[{"/home/andrews_souza/Projects/vet-app/src/index.js":"1","/home/andrews_souza/Projects/vet-app/src/App.js":"2","/home/andrews_souza/Projects/vet-app/src/Router.js":"3","/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js":"4","/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js":"5","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js":"6","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js":"7","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js":"8","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js":"9","/home/andrews_souza/Projects/vet-app/src/components/menu.js":"10","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js":"11","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js":"12","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js":"13","/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js":"14","/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js":"15","/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js":"16","/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js":"17","/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js":"18","/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js":"19","/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js":"20","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js":"21","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js":"22","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js":"23","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js":"24","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js":"25","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js":"26","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js":"27","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js":"28","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js":"29","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js":"30","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js":"31","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js":"32","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js":"33","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js":"34","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js":"35","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js":"36","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/tableAlergia.js":"37","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/editAlergia.js":"38","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/adicionarAlergias.js":"39","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/tableMedicamento.js":"40","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/adicionarMedicamento.js":"41","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/EditMedimento.js":"42","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/EditVacinas.js":"43","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/adicionarVermufugos.js":"44","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/TableVermifugo.js":"45","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/EditVermifugo.js":"46"},{"size":650,"mtime":1632685300628,"results":"47","hashOfConfig":"48"},{"size":145,"mtime":1632685300628,"results":"49","hashOfConfig":"48"},{"size":1920,"mtime":1632767325282,"results":"50","hashOfConfig":"48"},{"size":12297,"mtime":1632951124008,"results":"51","hashOfConfig":"48"},{"size":4643,"mtime":1633393620932,"results":"52","hashOfConfig":"48"},{"size":10424,"mtime":1633394706800,"results":"53","hashOfConfig":"48"},{"size":2718,"mtime":1632685300632,"results":"54","hashOfConfig":"48"},{"size":2919,"mtime":1633391867758,"results":"55","hashOfConfig":"48"},{"size":7136,"mtime":1633393230701,"results":"56","hashOfConfig":"48"},{"size":4576,"mtime":1632685300628,"results":"57","hashOfConfig":"48"},{"size":2834,"mtime":1632709356285,"results":"58","hashOfConfig":"48"},{"size":1666,"mtime":1632685300632,"results":"59","hashOfConfig":"48"},{"size":883,"mtime":1632685300632,"results":"60","hashOfConfig":"48"},{"size":2160,"mtime":1632685300628,"results":"61","hashOfConfig":"48"},{"size":203,"mtime":1632685300636,"results":"62","hashOfConfig":"48"},{"size":1039,"mtime":1632685300636,"results":"63","hashOfConfig":"48"},{"size":1300,"mtime":1632688329377,"results":"64","hashOfConfig":"48"},{"size":1120,"mtime":1632685300640,"results":"65","hashOfConfig":"48"},{"size":1569,"mtime":1632761528757,"results":"66","hashOfConfig":"48"},{"size":9835,"mtime":1634604247411,"results":"67","hashOfConfig":"48"},{"size":2132,"mtime":1632699369084,"results":"68","hashOfConfig":"48"},{"size":5073,"mtime":1634600253417,"results":"69","hashOfConfig":"48"},{"size":4017,"mtime":1632700920058,"results":"70","hashOfConfig":"48"},{"size":5107,"mtime":1634601410523,"results":"71","hashOfConfig":"48"},{"size":6052,"mtime":1632960942932,"results":"72","hashOfConfig":"48"},{"size":5098,"mtime":1632931998023,"results":"73","hashOfConfig":"48"},{"size":5071,"mtime":1634602279673,"results":"74","hashOfConfig":"48"},{"size":5095,"mtime":1634604151140,"results":"75","hashOfConfig":"48"},{"size":2531,"mtime":1632951173783,"results":"76","hashOfConfig":"48"},{"size":11223,"mtime":1632930862354,"results":"77","hashOfConfig":"48"},{"size":13491,"mtime":1632930876613,"results":"78","hashOfConfig":"48"},{"size":4207,"mtime":1632780545643,"results":"79","hashOfConfig":"48"},{"size":2588,"mtime":1632931191523,"results":"80","hashOfConfig":"48"},{"size":2620,"mtime":1634603289898,"results":"81","hashOfConfig":"48"},{"size":4182,"mtime":1634603201822,"results":"82","hashOfConfig":"48"},{"size":3752,"mtime":1632951996301,"results":"83","hashOfConfig":"48"},{"size":2625,"mtime":1634600476749,"results":"84","hashOfConfig":"48"},{"size":3720,"mtime":1634600712300,"results":"85","hashOfConfig":"48"},{"size":4188,"mtime":1634600435181,"results":"86","hashOfConfig":"48"},{"size":2639,"mtime":1634601724808,"results":"87","hashOfConfig":"48"},{"size":4217,"mtime":1634601470223,"results":"88","hashOfConfig":"48"},{"size":3773,"mtime":1634602020143,"results":"89","hashOfConfig":"48"},{"size":3726,"mtime":1634603372650,"results":"90","hashOfConfig":"48"},{"size":4203,"mtime":1634605461717,"results":"91","hashOfConfig":"48"},{"size":2629,"mtime":1634605319137,"results":"92","hashOfConfig":"48"},{"size":3743,"mtime":1634605502727,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1ewsjpn",{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"96"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"96"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"96"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"96"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"96"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/andrews_souza/Projects/vet-app/src/index.js",[],["202","203"],"/home/andrews_souza/Projects/vet-app/src/App.js",[],"/home/andrews_souza/Projects/vet-app/src/Router.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/pets/pets.adicionar.js",["204","205"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport InputMask from \"react-input-mask\";\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { creatAnimal } from '../../redux/actions';\n\nconst caes = ['Pastor-Alemão', 'Labrador', 'Zwergspitz', 'Husky', 'Golden', 'Buldogue', 'Poodle', 'Pit-Bull', 'Chihuahua', 'Shiba Inu', 'Rottweiler', 'Bobermann', 'Pug', 'Dachshulund'];\nconst gatos = ['Persa', ' Maine Coon', 'Siamês', 'Gato Inglês', 'Ragdoll', 'Munchkin', 'Norueguês', 'Siberiano'];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        padding: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column'\n    },\n    fixedHeight: {\n        height: 350,\n    },\n    Button: {\n        marginBottom: 'auto'\n    },\n    pets: {\n        marginLeft: '10px'\n    }\n}));\n\nconst AdicionarAnimals = ({ creatAnimal }) => {\n\n    const [values, setValues] = useState();\n    const [created, setCreated] = useState(false);\n    const history = useHistory();\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    const [especie, setEspecie] = useState(null);\n\n    const selectEspecie = (ev) => {\n        const selected = ev.target.value\n        setEspecie(selected)\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        creatAnimal(values)\n        setCreated(true)\n    };\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n       \n    }\n    const callTowFunction = (ev) =>{\n        onChange(ev)\n        selectEspecie(ev)\n    }\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Pets\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <h1>\n                        Cadastrar Pet\n                    </h1>\n                    <form onSubmit={onSubmit}>\n                        <Grid item sm={10}>\n                            <Paper className={fixedHeightPaper}>\n                                <Grid container spacing={4}>\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            required\n                                            id=\"nome\"\n                                            name=\"nome\"\n                                            label=\"Nome\"\n                                            fullWidth\n                                            onChange={onChange}\n                                            autoComplete=\"shipping address-line1\"\n                                        />\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <InputMask\n                                            mask=\"999.999.999-99\"\n                                            maskChar=\" \"\n                                            onChange={onChange}\n                                            id=\"cpf\"\n                                            name=\"cpf\"\n                                        >\n                                            {() => <TextField fullWidth className={classes.inputText} label=\"CPF do Dono\" required name=\"cpf\" />}\n                                        </InputMask>\n                                    </Grid>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Espécie</InputLabel>\n                                            <Select\n                                                name=\"especie\"\n                                                onChange={callTowFunction}\n                                                native\n                                            >\n\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value={'Cachorro'}>Cachorro</option>\n                                                <option value={'Gato'}>Gato</option>\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Raça</InputLabel>\n                                            <Select\n                                                name=\"raca\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                {\n                                                    especie && especie === 'Cachorro' ? caes.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n                                                {\n                                                    especie && especie === 'Gato' ? gatos.map(i => <option value={i}>{i}</option>) : ''\n\n                                                }\n\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Pelagem</InputLabel>\n                                            <Select\n                                                name=\"pelagem\"\n                                                onChange={onChange}\n                                                native\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Curto'>Curto</option>\n                                                <option value='Médio'>Médio</option>\n                                                <option value='Alto'>Alto</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n\n\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"idade\"\n                                            name=\"idade\"\n                                            label=\"Idade\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Sexo</InputLabel>\n                                            <Select\n                                                name='sexo'\n                                                native\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Femea'>Femea</option>\n                                                <option value='Macho'>Macho</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid container spacing={3}>\n                                    <Grid item xs={12} sm={6}>\n                                        <TextField\n                                            required\n                                            id=\"peso\"\n                                            name=\"peso\"\n                                            label=\"Peso\"\n                                            type=\"number\"\n                                            onChange={onChange}\n                                            fullWidth\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <FormControl fullWidth className={classes.formControl} >\n                                            <InputLabel item >Temperamento</InputLabel>\n                                            <Select\n                                                native\n                                                name='temperamento'\n                                                onChange={onChange}\n                                            >\n                                                <option aria-label=\"None\" value=\"\" />\n                                                <option value='Calmo'>Calmo</option>\n                                                <option value='Bravo'>Bravo</option>\n                                            </Select>\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid item xs={12} sm={6}>\n                                        <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                                            Adicionar\n                                        </Button>\n\n                                    </Grid>\n                                </Grid>\n                            </Paper>\n                        </Grid>\n                    </form>\n                </Container>\n            </main>\n            <ToastContainer />\n        </div>\n    );\n};\n\n\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    creatAnimal\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarAnimals);","/home/andrews_souza/Projects/vet-app/src/pages/singin/index.js",["206","207"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { userAuthenticate, stateReducer } from '../../redux/actions';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst SignIn = ({userAuthenticate, stateReducer}) => {\n    const classes = useStyles();\n    const initialState = {\n        email: \"\",\n        password: \"\",\n    };\n\n    const { success, loading } = stateReducer;\n    const history = useHistory();\n    const [values, setValues] = useState(initialState);\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        await userAuthenticate(values)\n    };\n\n    useEffect(() => {\n        if (success) {\n            const timer = setTimeout(() => {\n                history.push('/dashboard')\n            }, 1000);\n            return () => clearTimeout(timer);\n        }\n    }, [success]);\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    return (\n\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign in\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={onSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={onChange}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            onChange={onChange}\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <FormControlLabel\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\n                            label=\"Remember me\"\n                        />\n                       \n                            <Button\n\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                type=\"submit\"\n                            >\n                                {loading ? ('loading'): ('SingIn')}\n                            </Button>\n                        \n                    </form>\n                </div>\n                <ToastContainer/>\n            </Container>\n            \n       \n    );\n};\n\nconst mapStateToProps = state => ({\n    stateReducer: state.user\n})\n\nconst mapDispatch = dispatch => bindActionCreators({\n    userAuthenticate\n}, dispatch)\n\nexport default connect(mapStateToProps, mapDispatch)(SignIn);","/home/andrews_souza/Projects/vet-app/src/pages/pets/index.js",["208","209","210","211","212","213"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport InputMask from \"react-input-mask\";\nimport Button from \"@material-ui/core/Button\";\nimport Pets from \"@material-ui/icons/Pets\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { fetchAnimals, creatPessoa } from \"../../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    padding: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n  Button: {\n    marginBottom: \"auto\",\n  },\n  pets: {\n    marginLeft: \"10px\",\n  },\n}));\n\nconst Animais = ({\n  fetchAnimals,\n  creatPessoa,\n  stateReducer,\n  stateReducerUser,\n  stateAll,\n}) => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  const history = useHistory();\n  const [values, setValues] = useState({});\n\n  const [nome, setNome] = useState();\n  const [cpf, setCPF] = useState();\n  const [email, setEmail] = useState();\n  const [telefone, setTelefone] = useState();\n  const [sus, setSus] = useState();\n\n  const [cep, setCep] = useState();\n\n  const [endereco, setEndereco] = useState();\n  const [bairro, setBairro] = useState();\n  const [numero, setNumero] = useState();\n  const [uf, setUf] = useState();\n\n  const showPetCadastro = () => {\n    history.push(\"/pets/adicionar\");\n  };\n  const setAllValues = () => {\n    setNome(\"\");\n    setCPF(\"\");\n    setEmail(\"\");\n    setEmail(\"\");\n    setTelefone(\"\");\n    setSus(\"\");\n\n    setCep(\"\");\n    setEndereco(\"\");\n    setBairro(\"\");\n    setNumero(\"\");\n    setUf(\"\");\n  };\n\n  const onChange = (ev) => {\n    const { name, value } = ev.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const fetchCep = async (data) => {\n    const options = {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"default\",\n    };\n    const cep = await fetch(\n      `https://viacep.com.br/ws/${data}/json/`,\n      options\n    ).then((resp) => {\n      return resp.json();\n    });\n    return cep;\n  };\n\n  let cepConsumer = cep ? cep : null;\n\n  useEffect(async () => {\n    if (cepConsumer != null && cepConsumer.length >= 8) {\n      cepConsumer = cepConsumer.replace(\"-\", \"\");\n      const cep = await fetchCep(cepConsumer);\n\n      if (cep) {\n        setUf(cep.uf);\n        setBairro(cep.bairro);\n        setNumero();\n        setEndereco(cep.logradouro);\n      }\n    }\n  }, [cepConsumer]);\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    creatPessoa(values);\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Menu msg=\"Pets\" />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <h1>Responsável</h1>\n          <form onSubmit={onSubmit}>\n            <Grid item sm={10}>\n              <Paper className={fixedHeightPaper}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"nome\"\n                      name=\"nome\"\n                      label=\"Nome\"\n                      fullWidth\n                      value={nome}\n                      onChange={(e) => setNome(e.target.value)}\n                      autoComplete=\"shipping address-line1\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"999.999.999-99\"\n                      maskChar=\" \"\n                      onChange={(e) => setCPF(e.target.value)}\n                      id=\"cpf\"\n                      name=\"cpf\"\n                      value={cpf}\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"CPF\"\n                          required\n                          name=\"cpf\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      onChange={onChange}\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      fullWidth\n                      onChange={(e) => setEmail(e.target.value)}\n                      autoComplete=\"shipping address-line1\"\n                      value={email}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"(99) - 9 9999-9999\"\n                      maskChar=\" \"\n                      onChange={onChange}\n                      id=\"celular\"\n                      name=\"telefone\"\n                      value={telefone}\n                      onChange={(e) => setTelefone(e.target.value)}\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"Celular\"\n                          name=\"telefone\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      onChange={(e) => setSus(e.target.value)}\n                      id=\"sus\"\n                      name=\"sus\"\n                      label=\"Carteirinha do SUS\"\n                      fullWidth\n                      value={sus}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"99999-999\"\n                      maskChar=\" \"\n                      onChange={(e) => setCep(e.target.value)}\n                      id=\"cep\"\n                      name=\"cep\"\n                      value={cep}\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"CEP\"\n                          required\n                          name=\"cep\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id=\"endereco\"\n                      name=\"endereco\"\n                      label=\"Endereço\"\n                      fullWidth\n                      value={endereco}\n                      onChange={(e) => setEndereco(e.target.value)}\n\n                      \n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id=\"bairro\"\n                      name=\"bairro\"\n                      label=\"Bairro\"\n                      fullWidth\n                      value={bairro}\n                      onChange={(e) => setBairro(e.target.value)}\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"numero\"\n                      name=\"numero\"\n                      label=\"numero\"\n                      value={numero}\n                      \n                      fullWidth\n                      onChange={(e) => setNumero(e.target.value)}\n                     \n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      id=\"uf\"\n                      name=\"uf\"\n                      label=\"UF\"\n                      value={uf}\n                      fullWidth\n                      onChange={(e) => setUf(e.target.value)}\n                      autoComplete=\"shipping address-line1\"\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                      Salvar\n                    </Button>\n\n                    <Button\n                      className={classes.pets}\n                      onClick={showPetCadastro}\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      <Pets />\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </form>\n        </Container>\n      </main>\n      <ToastContainer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.animals,\n  stateReducerUser: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      creatPessoa,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(Animais);\n","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/index.js",["214","215"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../components/menu';\nimport Chart from './chart';\nimport Orders from './orders';\nimport Deposits from './deposits';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 240,\n    },\n}));\n\nexport default function Dashboard() {\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Dashboard\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n\n                    <Grid container spacing={3}>\n                        {/* Chart */}\n                        <Grid item xs={12} md={8} lg={9}>\n                            <Paper className={fixedHeightPaper}>\n                                <Chart />\n                            </Paper>\n                        </Grid>\n                        {/* Recent Deposits */}\n                        <Grid item xs={12} md={4} lg={3}>\n                            <Paper className={fixedHeightPaper}>\n                                <Deposits />\n                            </Paper>\n                        </Grid>\n                        {/* Recent Orders */}\n                        <Grid item xs={12}>\n                            <Paper className={classes.paper}>\n                                <Orders />\n                            </Paper>\n                        </Grid>\n                    </Grid>\n\n                </Container>\n            </main>\n        </div >\n    );\n}","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/index.js",["216","217","218","219","220"],"import React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport Button from \"@material-ui/core/Button\";\nimport { Divider } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport CardAnimal from \"./cardAnimal\";\nimport { fetchAnimals } from \"../../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n  },\n  fixedHeight: {\n    height: 300,\n  },\n  hr: {\n    marginTop: \"60px\",\n    border: \"1px solid \",\n  },\n  title: {\n    fontSize: \"30px\",\n    fontFamily: \"Patua One\",\n    position: \"absolute\",\n    marginTop: \"10px\",\n  },\n  divCard: {\n    display: \"flex\",\n    overflowX: \"scroll\",\n    flexDirection: \"row\",\n    flexWrap: \"nowrap\",\n    padding: theme.spacing(2)\n  },\n}));\n\nconst Atendimento = ({ fetchAnimals, stateReducer }) => {\n  useEffect(async () => {\n    await fetchAnimals();\n  }, []);\n\n  let dados = stateReducer.animals;\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Menu msg=\"Atendimento\" />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          <Typography className={classes.title}>Animais</Typography>\n          <Divider className={classes.hr} light=\"true\" />\n\n          <Paper className={classes.divCard}>\n            {dados.length > 0 &&\n              dados.map((el) => <CardAnimal data={el}></CardAnimal>)}\n          </Paper>\n          <Box pt={4}>{/* <Footer /> */}</Box>\n        </Container>\n      </main>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.animals,\n  stateReducerUser: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchAnimals,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(Atendimento);\n","/home/andrews_souza/Projects/vet-app/src/pages/usuarios/index.js",["221","222","223"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Menu from \"../../components/menu\";\nimport InputMask from \"react-input-mask\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { createUser, stateReducer, stateAll } from \"../../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 350,\n  },\n}));\n\nconst CreatedUser = ({ createUser, stateReducer, stateAll }) => {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  const { success, loading } = stateReducer;\n  const [values, setValues] = useState();\n  const history = useHistory();\n\n  const onChange = (ev) => {\n    const { name, value } = ev.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    createUser(values);\n    \n    if (success) {\n      const timer = setTimeout(() => {\n        history.push(\"/dashboard\");\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  };\n\n\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Menu msg=\"Usuarios\" />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <Grid item sm={10}>\n              <Paper className={fixedHeightPaper}>\n                <Grid container spacing={4}>\n                  <Grid item xs={12}>\n                    <TextField\n                      required\n                      id=\"nome\"\n                      name=\"nome\"\n                      label=\"Nome\"\n                      fullWidth\n                      autoComplete=\"shipping address-line1\"\n                      onChange={onChange}\n                    />\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"999.999.999-99\"\n                      maskChar=\" \"\n                      onChange={onChange}\n                      id=\"cpf\"\n                      name=\"cpf\"\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"CPF\"\n                          required\n                          name=\"cpf\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <InputMask\n                      mask=\"(99) - 9 9999-9999\"\n                      maskChar=\" \"\n                      onChange={onChange}\n                      id=\"celular\"\n                      name=\"telefone\"\n                    >\n                      {() => (\n                        <TextField\n                          fullWidth\n                          className={classes.inputText}\n                          label=\"Celular\"\n                          name=\"telefone\"\n                        />\n                      )}\n                    </InputMask>\n                  </Grid>\n                </Grid>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      id=\"crmv\"\n                      name=\"crmv\"\n                      label=\"Crmv\"\n                      fullWidth\n                      onChange={onChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <FormControl fullWidth className={classes.formControl}>\n                      <InputLabel item>Função</InputLabel>\n                      <Select name=\"funcao\" onChange={onChange} native>\n                        <option aria-label=\"None\" value=\"\" />\n                        <option value={\"Administrativo\"}>Administrativo</option>\n                        <option value={\"Médico\"}>Médico</option>\n                        <option value={\"Recepcionista\"}>Recepcionista</option>\n                      </Select>\n                    </FormControl>\n                  </Grid>\n                </Grid>\n\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      required\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      label=\"Email\"\n                      fullWidth\n                      autoComplete=\"shipping address-line1\"\n                      onChange={onChange}\n                    />\n                  </Grid>\n\n                  <Grid item xs={12} sm={6}>\n                    <TextField\n                      type=\"password\"\n                      required\n                      id=\"senha\"\n                      name=\"senha\"\n                      label=\"Senha\"\n                      fullWidth\n                      autoComplete=\"shipping address-line1\"\n                      onChange={onChange}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                      {loading ? \"loading\" : \"Salvar\"}\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n          </Container>\n        </main>\n      </div>\n      <ToastContainer />\n    </form>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  stateReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      createUser,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(CreatedUser);\n","/home/andrews_souza/Projects/vet-app/src/components/menu.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/dashboard/orders.js",["224","225","226"],"import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n    return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n    createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n    createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n    createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n    createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nexport default function Orders() {\n    const classes = useStyles();\n    return (\n        <>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Date</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Ship To</TableCell>\n                        <TableCell>Payment Method</TableCell>\n                        <TableCell align=\"right\">Sale Amount</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map((row) => (\n                        <TableRow key={row.id}>\n                            <TableCell>{row.date}</TableCell>\n                            <TableCell>{row.name}</TableCell>\n                            <TableCell>{row.shipTo}</TableCell>\n                            <TableCell>{row.paymentMethod}</TableCell>\n                            <TableCell align=\"right\">{row.amount}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n}","/home/andrews_souza/Projects/vet-app/src/pages/dashboard/chart.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/dashboard/deposits.js",[],"/home/andrews_souza/Projects/vet-app/src/components/itensMenu.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/index.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/animals.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/user.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/reducers/pessoa.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/constants/index.js",[],"/home/andrews_souza/Projects/vet-app/src/redux/actions/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/cardAnimal.js",["227","228","229"],"import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { Typography } from '@material-ui/core';\nimport { Card, CardActions, CardContent } from '@material-ui/core';\nimport Prontuario from './prontuario';\n\nconst useStyles = makeStyles((theme) => ({\n    Card: {\n        width: '200px'\n    }\n}));\n\nconst bull = (\n    <Box\n        component=\"span\"\n        sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n    >\n        •\n    </Box>\n);\nconst CardAnimal = ({ data }) => {\n    const history = useHistory()\n    const { nome, idade, raca, especie, sexo, pelagem, temperamento, peso, _id:id } = data;\n    const onClick = () => {\n        history.push(`pets/prontuario/${id}`)\n    };\n\n    const classes = useStyles();\n\n\n    return (\n        <Card className={classes.Card}>\n            <CardContent>\n                <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    {especie}\n                </Typography>\n                <Typography variant=\"h5\" component=\"div\">\n                    {nome}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Raça: {raca}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Idade: {idade}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Sexo: {sexo}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Peso: {peso}\n                </Typography>\n\n                <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\n                    Temperamento: {temperamento}\n                </Typography>\n\n            </CardContent>\n            <CardActions>\n                <Button size=\"small\" onClick={onClick}>Prontuário</Button>\n            </CardActions>\n        </Card>\n    )\n};\n\nexport default CardAnimal;","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/dados/index.js",["230"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Menu from '../../../components/menu';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        height: '100vh',\n        overflow: 'auto',\n    },\n    container: {\n        paddingTop: theme.spacing(4),\n        paddingBottom: theme.spacing(4),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    fixedHeight: {\n        height: 80,\n\n    },\n    aaa: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"18px\"\n    }\n}));\n\nconst Prontuario = () => {\n\n    const history = useHistory();\n    const { id } = useParams();\n    const onClick = (ev) => {\n        const types = ev.target.innerText\n        switch (types) {\n\n            case 'PRONTUARIO': {\n                return history.push(`/pets/prontuario/${id}`)\n            }\n\n            case 'TRATAMENTOS': {\n                return history.push(`/pets/tratamentos/${id}`)\n            }\n\n            case 'ALERGIAS': {\n                return history.push(`/pets/alergias/${id}`)\n            }\n\n            case 'MEDICAMENTO': {\n                return history.push(`/pets/medicamentos/${id}`)\n            }\n\n            case 'VACINAS': {\n                return history.push(`/pets/vacinas/${id}`)\n            }\n\n            case 'VERMIFUGO': {\n                return history.push(`/pets/vermifugos/${id}`)\n            }\n\n            case 'DADOS': {\n                return history.push(`/pets/dados/${id}`)\n            }\n\n            default:\n                return history.push('/dashboard')\n        }\n    }\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <Menu msg=\"Atendimento\" />\n            <main className={classes.content}>\n                <div className={classes.appBarSpacer} />\n                <Container maxWidth=\"lg\" className={classes.container}>\n                    <Grid item sm={12}>\n                        <Paper className={fixedHeightPaper}>\n                            <Grid container spacing={3} className={classes.aaa}>\n                                <Button variant=\"outlined\" onClick={onClick}>Prontuario</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Tratamentos</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Alergias</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Medicamento</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Vacinas</Button>\n                                <Button variant=\"outlined\" onClick={onClick}>Vermifugo</Button>\n                                <Button variant=\"contained\" onClick={onClick}>Dados</Button>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                    <Box pt={4}>\n                        {/* <Footer /> */}\n                    </Box>\n                </Container>\n            </main>\n        </div>\n    );\n};\n\nexport default Prontuario","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/index.js",[],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/ProtuarioTable.js",["231","232","233","234"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewProntuario }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = animalReducer.animals\n    const redenrTable = animal.filter(el => el._id === data)\n    const classes = useStyles();\n    const showView = e => {\n        viewProntuario(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Descrição</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].prontuarios.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.descricao}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/AdicionarPronturio.js",["235"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField'; \nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createProntuario } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst Prontuario = ({ createProntuario, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n    \n\n    \n    \n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createProntuario(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Análise Geral</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"peso\"\n                                name=\"peso\"\n                                label=\"Peso\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"idade\"\n                                name=\"idade\"\n                                label=\"Idade\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"textarea\"\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"pregresso\"\n                                name=\"progresso\"\n                                label=\"Pregresso\"\n                                type=\"textarea\"\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"resultado\"\n                                name=\"resultado\"\n                                label=\"Resultado\"\n                                type=\"textarea\"\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <h1>Exame Físico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"temperatura\"\n                                name=\"temperatura\"\n                                label=\"Temperatura Cº\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-respiratoria\"\n                                name=\"frequenciaRespiratoria\"\n                                label=\"Frequencia respiratoria (MPM)\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-cardiaca\"\n                                name=\"frequenciaCardiaca\"\n                                label=\"Frequencia Cardiaca (BPM)\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"tempo-de-preenchimento-capilar\"\n                                name=\"tempoPreenchimentoCapilar\"\n                                label=\"Tempo de preenchimento capilar (S)\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"mucosas\"\n                                name=\"mucosas\"\n                                label=\"Mucosas\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"hidratacao\"\n                                name=\"hidratacao\"\n                                label=\"Hidratação\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"ectoparasitos\"\n                                name=\"ectoparasitos\"\n                                label=\"Ectoparasitos\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <h1>Exame Físico Específico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"exame-ficico\"\n                                name=\"exameFisico\"\n                                label=\"Exame Fífico Específico\"\n                                type=\"textarea\"\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createProntuario\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(Prontuario)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/prontuario/EditProntuario.js",["236"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { updatedProntuario } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids: {\n        paddingTop: '10px'\n    }\n}));\n\nconst EditProntuario = ({ updatedProntuario, userReducer, data }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n\n    const [peso, setPeso] = useState(data.peso || '')\n    const [idade, setIdade] = useState(data.idade || '')\n    const [descricao, setDescricao] = useState(data.descricao || '')\n    const [progresso, setProgresso] = useState(data.progresso || '')\n    const [resultado, setResultado] = useState(data.resultado || '')\n    const [temperatura, setTemperatura] = useState(data.temperatura || '')\n    const [frequenciaCardiaca, setFrequenciaCardiaca] = useState(data.frequenciaCardiaca || '')\n    const [frequenciaRespiratoria, setFrequenciaRespiratoria] = useState(data.frequenciaRespiratoria || '')\n    const [tempoPreenchimentoCapilar, setTempoPreenchimentoCapilar] = useState(data.tempoPreenchimentoCapilar || '')\n    const [mucosas, setMucosas] = useState(data.mucosas || '')\n    const [hidratacao, setHidratacao] = useState(data.hidratacao || '')\n    const [ectoparasitos, setEctoparasitos] = useState(data.ectoparasitos || '')\n    const [exameFisico, setExameFisico] = useState(data.exameFisico || '')\n\n    const history = useHistory();\n\n    \n\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        updatedProntuario({\n            peso,\n            idade,\n            descricao,\n            progresso,\n            resultado,\n            temperatura,\n            frequenciaCardiaca,\n            frequenciaRespiratoria,\n            tempoPreenchimentoCapilar,\n            mucosas,\n            hidratacao,\n            ectoparasitos,\n            exameFisico,\n            idAnimal: id,\n            veterinario,\n            data: Date.now(),\n            idDoProntuario: data._id\n        })\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n\n            <form onSubmit={onSubmit}>\n                <h1>Análise Geral</h1>\n                <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"peso\"\n                                name=\"peso\"\n                                label=\"Peso\"\n                                type=\"number\"\n                                value={peso}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setPeso(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n                                required\n                                id=\"idade\"\n                                name=\"idade\"\n                                label=\"Idade\"\n                                type=\"number\"\n                                value={idade}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setIdade(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"textarea\"\n                                multiline\n                                value={descricao}\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setDescricao(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"pregresso\"\n                                name=\"progresso\"\n                                label=\"Pregresso\"\n                                type=\"textarea\"\n                                value={progresso}\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setProgresso(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"resultado\"\n                                name=\"resultado\"\n                                label=\"Resultado\"\n                                type=\"textarea\"\n                                value={resultado}\n                                multiline\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setResultado(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <h1>Exame Físico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"temperatura\"\n                                name=\"temperatura\"\n                                label=\"Temperatura Cº\"\n                                type=\"number\"\n                                value={temperatura}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setTemperatura(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-respiratoria\"\n                                name=\"frequenciaRespiratoria\"\n                                label=\"Frequencia respiratoria (MPM)\"\n                                type=\"number\"\n                                value={frequenciaRespiratoria}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setFrequenciaRespiratoria(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"frequencia-cardiaca\"\n                                name=\"frequenciaCardiaca\"\n                                label=\"Frequencia Cardiaca (BPM)\"\n                                type=\"number\"\n                                value={frequenciaCardiaca}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setFrequenciaCardiaca(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"tempo-de-preenchimento-capilar\"\n                                name=\"tempoPreenchimentoCapilar\"\n                                label=\"Tempo de preenchimento capilar (S)\"\n                                type=\"number\"\n                                variant=\"outlined\"\n                                fullWidth\n                                value={tempoPreenchimentoCapilar}\n                                onChange={e => setTempoPreenchimentoCapilar(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"mucosas\"\n                                name=\"mucosas\"\n                                label=\"Mucosas\"\n                                value={mucosas}\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setMucosas(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"hidratacao\"\n                                name=\"hidratacao\"\n                                label=\"Hidratação\"\n                                type=\"text\"\n                                value={hidratacao}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setHidratacao(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"ectoparasitos\"\n                                name=\"ectoparasitos\"\n                                label=\"Ectoparasitos\"\n                                type=\"text\"\n                                value={ectoparasitos}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setEctoparasitos(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <h1>Exame Físico Específico</h1>\n                    <Divider className={classes.divider} />\n                    <Grid container spacing={6} className={classes.grids}>\n                        <Grid item xs={12} sm={6} >\n                            <TextField\n\n                                id=\"exame-ficico\"\n                                name=\"exameFisico\"\n                                label=\"Exame Fífico Específico\"\n                                type=\"textarea\"\n                                multiline\n                                value={exameFisico}\n                                rows={3}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={e => setExameFisico(e.target.value)}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Atualizar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer />\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    updatedProntuario\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/cadastrarTratamento.js",["237"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport { useHistory, useParams } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport { createTratamento } from '../../../redux/actions'\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n    table: {\n        marginTop: '80px',\n        padding: theme.spacing(2),\n        minHeight: 100\n    },\n    divider: {\n        border: 'solid 1px',\n        marginTop: '10px'\n    },\n    salvar: {\n        margin: '10px'\n    },\n    grids:{\n        paddingTop: '10px'\n    }\n}));\n\nconst AdicionarTratamento = ({ createTratamento, userReducer }) => {\n\n\n    const { id } = useParams();\n    const veterinario = userReducer.user.nome\n    const history = useHistory();\n    \n    const [values, setValues] = useState({\n        idAnimal: id,\n        veterinario,\n        data: Date.now()\n    })\n\n    const onChange = (ev) => {\n        const { name, value } = ev.target;\n        setValues({ ...values, [name]: value });\n    };\n\n    const onSubmit = async (ev) => {\n        ev.preventDefault();\n        createTratamento(values)\n\n        const timer = setTimeout(() => {\n            history.push('/dashboard')\n        }, 1000);\n        return () => clearTimeout(timer);\n    };\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n\n        <Paper className={classes.table} >\n\n           \n            <form onSubmit={onSubmit}>\n            <h1>Tratamentos</h1>\n            <Divider className={classes.divider} />\n                <Grid item sm={12} className={classes.grids}>\n                    <Grid container spacing={6}>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"Tratramento\"\n                                name=\"tratamento\"\n                                label=\"Tratramento\"\n                                type=\"text\"\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n\n                        <Grid item xs={12} sm={12} >\n                            <TextField\n                                required\n                                id=\"descricao\"\n                                name=\"descricao\"\n                                label=\"Descrição\"\n                                type=\"text\"\n                                multiline\n                                rows={5}\n                                variant=\"outlined\"\n                                fullWidth\n                                onChange={onChange}\n                                autoComplete=\"shipping address-line1\"\n                            />\n                        </Grid>\n         \n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <Button variant=\"contained\" type=\"submit\" color=\"primary\" className={classes.salvar}>\n                        Salvar\n                    </Button>\n                </Grid>\n            </form>\n            <ToastContainer/>\n        </Paper>\n\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    createTratamento\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(AdicionarTratamento)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/TratamentoTable.js",["238","239","240","241","242","243"],"import React, {useEffect, useState} from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from \"redux\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Visibility from '@material-ui/icons/Visibility'\nimport Button from '@material-ui/core/Button';\nimport { fetchAnimals } from '../../../redux/actions'\nimport { useHistory } from 'react-router-dom';\nimport NoteAdd from '@material-ui/icons/NoteAdd';\n\nconst useStyles = makeStyles((theme) => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst ProntuarioTable = ({ fetchAnimals, data, animalReducer, viewTratamento }) => {\n    \n    useEffect(async()=>{\n        await fetchAnimals()\n    },[])\n    const history = useHistory()\n    const animal = animalReducer.animals\n    const redenrTable = animal.filter(el => el._id === data)\n    const classes = useStyles();\n    const showView = e => {\n        viewTratamento(e)\n    } \n    return (\n        <>\n            \n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Data</TableCell>\n                        <TableCell>Tratamento</TableCell>\n                        <TableCell>Veterinário</TableCell>\n                        <TableCell></TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {redenrTable[0].tratamentos.map((row) => (\n                        <TableRow key={row._id}>\n                            <TableCell>{row.data}</TableCell>\n                            <TableCell>{row.tratamento}</TableCell>\n                            <TableCell>{row.veterinario}</TableCell>\n                            <TableCell>\n                               <Button onClick={()=> showView(row)} > <Visibility /> </Button>\n                            </TableCell>\n                            \n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            \n        </>\n    );\n};\n\nconst mapStateToProps = state => ({\n    animalReducer: state.animals,\n    userReducer: state.user,\n    stateAll: state\n});\n\nconst mapDispatch = dispatch => bindActionCreators({\n    fetchAnimals\n}, dispatch);\n\n\nexport default connect(mapStateToProps, mapDispatch)(ProntuarioTable)","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/vacinasTable.js",["244","245","246","247","248","249"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/adicionarVacinas.js",["250"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/tratamentos/EdittTratamento.js",["251"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { updatedTratamento } from \"../../../redux/actions\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  table: {\n    marginTop: \"80px\",\n    padding: theme.spacing(2),\n    minHeight: 100,\n  },\n  divider: {\n    border: \"solid 1px\",\n    marginTop: \"10px\",\n  },\n  salvar: {\n    margin: \"10px\",\n  },\n  grids: {\n    paddingTop: \"10px\",\n  },\n}));\n\nconst EditProntuario = ({ updatedTratamento, userReducer, data }) => {\n\n  const { id } = useParams();\n  const veterinario = userReducer.user.nome;\n  const [descricao, setDescricao] = useState(data.descricao || \"\");\n  const [tratamento, setTratamento] = useState(data.tratamento || \"\");\n\n  const history = useHistory();\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n    updatedTratamento({\n      descricao,\n      tratamento,\n      idAnimal: id,\n      veterinario,\n      data: Date.now(),\n      idDoTratamento: data._id,\n    });\n\n    const timer = setTimeout(() => {\n      history.push(\"/dashboard\");\n    }, 1000);\n    return () => clearTimeout(timer);\n  };\n\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n  return (\n    <Paper className={classes.table}>\n      <form onSubmit={onSubmit}>\n        <h1>Tratamentos</h1>\n        <Divider className={classes.divider} />\n        <Grid item sm={12} className={classes.grids}>\n          <Grid container spacing={6}>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"Tratramento\"\n                name=\"tratamento\"\n                label=\"Tratramento\"\n                type=\"text\"\n                variant=\"outlined\"\n                fullWidth\n                value={tratamento}\n                onChange={e => setTratamento(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n\n            <Grid item xs={12} sm={12}>\n              <TextField\n                required\n                id=\"descricao\"\n                name=\"descricao\"\n                label=\"Descrição\"\n                type=\"text\"\n                value={descricao}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n                onChange={e => setDescricao(e.target.value)}\n                autoComplete=\"shipping address-line1\"\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            className={classes.salvar}\n          >\n            Atualizar\n          </Button>\n        </Grid>\n      </form>\n      <ToastContainer />\n    </Paper>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  animalReducer: state.animals,\n  userReducer: state.user,\n  stateAll: state,\n});\n\nconst mapDispatch = (dispatch) =>\n  bindActionCreators(\n    {\n      updatedTratamento,\n    },\n    dispatch\n  );\n\nexport default connect(mapStateToProps, mapDispatch)(EditProntuario);\n","/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/tableAlergia.js",["252","253","254","255","256","257"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/editAlergia.js",["258"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/alergias/adicionarAlergias.js",["259"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/tableMedicamento.js",["260","261","262","263","264","265"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/adicionarMedicamento.js",["266"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/medicamento/EditMedimento.js",["267"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vacinas/EditVacinas.js",["268"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/adicionarVermufugos.js",["269"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/TableVermifugo.js",["270","271","272","273","274","275"],"/home/andrews_souza/Projects/vet-app/src/pages/atendimento/vermifugo/EditVermifugo.js",["276"],{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":69,"column":12,"nodeType":"283","messageId":"284","endLine":69,"endColumn":19},{"ruleId":"281","severity":1,"message":"285","line":70,"column":11,"nodeType":"283","messageId":"284","endLine":70,"endColumn":18},{"ruleId":"281","severity":1,"message":"286","line":18,"column":28,"nodeType":"283","messageId":"284","endLine":18,"endColumn":40},{"ruleId":"287","severity":1,"message":"288","line":63,"column":8,"nodeType":"289","endLine":63,"endColumn":17,"suggestions":"290"},{"ruleId":"281","severity":1,"message":"291","line":19,"column":10,"nodeType":"283","messageId":"284","endLine":19,"endColumn":22},{"ruleId":"281","severity":1,"message":"292","line":87,"column":9,"nodeType":"283","messageId":"284","endLine":87,"endColumn":21},{"ruleId":"287","severity":1,"message":"293","line":124,"column":13,"nodeType":"294","endLine":136,"endColumn":4},{"ruleId":"287","severity":1,"message":"295","line":126,"column":21,"nodeType":"296","endLine":126,"endColumn":49},{"ruleId":"297","severity":1,"message":"298","line":204,"column":23,"nodeType":"299","messageId":"300","endLine":204,"endColumn":65},{"ruleId":"297","severity":1,"message":"298","line":218,"column":23,"nodeType":"299","messageId":"300","endLine":218,"endColumn":68},{"ruleId":"281","severity":1,"message":"301","line":5,"column":8,"nodeType":"283","messageId":"284","endLine":5,"endColumn":11},{"ruleId":"281","severity":1,"message":"302","line":8,"column":8,"nodeType":"283","messageId":"284","endLine":8,"endColumn":17},{"ruleId":"281","severity":1,"message":"303","line":1,"column":17,"nodeType":"283","messageId":"284","endLine":1,"endColumn":25},{"ruleId":"281","severity":1,"message":"304","line":9,"column":8,"nodeType":"283","messageId":"284","endLine":9,"endColumn":14},{"ruleId":"287","severity":1,"message":"293","line":68,"column":13,"nodeType":"294","endLine":70,"endColumn":4},{"ruleId":"287","severity":1,"message":"305","line":70,"column":6,"nodeType":"289","endLine":70,"endColumn":8,"suggestions":"306"},{"ruleId":"281","severity":1,"message":"307","line":75,"column":9,"nodeType":"283","messageId":"284","endLine":75,"endColumn":25},{"ruleId":"281","severity":1,"message":"308","line":1,"column":27,"nodeType":"283","messageId":"284","endLine":1,"endColumn":36},{"ruleId":"281","severity":1,"message":"286","line":21,"column":22,"nodeType":"283","messageId":"284","endLine":21,"endColumn":34},{"ruleId":"281","severity":1,"message":"309","line":21,"column":36,"nodeType":"283","messageId":"284","endLine":21,"endColumn":44},{"ruleId":"281","severity":1,"message":"310","line":2,"column":8,"nodeType":"283","messageId":"284","endLine":2,"endColumn":12},{"ruleId":"281","severity":1,"message":"311","line":28,"column":10,"nodeType":"283","messageId":"284","endLine":28,"endColumn":24},{"ruleId":"281","severity":1,"message":"312","line":39,"column":11,"nodeType":"283","messageId":"284","endLine":39,"endColumn":18},{"ruleId":"281","severity":1,"message":"313","line":8,"column":8,"nodeType":"283","messageId":"284","endLine":8,"endColumn":18},{"ruleId":"281","severity":1,"message":"314","line":16,"column":7,"nodeType":"283","messageId":"284","endLine":16,"endColumn":11},{"ruleId":"281","severity":1,"message":"315","line":26,"column":47,"nodeType":"283","messageId":"284","endLine":26,"endColumn":54},{"ruleId":"281","severity":1,"message":"302","line":8,"column":8,"nodeType":"283","messageId":"284","endLine":8,"endColumn":17},{"ruleId":"287","severity":1,"message":"293","line":24,"column":15,"nodeType":"294","endLine":26,"endColumn":6},{"ruleId":"287","severity":1,"message":"305","line":26,"column":7,"nodeType":"289","endLine":26,"endColumn":9,"suggestions":"316"},{"ruleId":"281","severity":1,"message":"285","line":27,"column":11,"nodeType":"283","messageId":"284","endLine":27,"endColumn":18},{"ruleId":"281","severity":1,"message":"312","line":30,"column":11,"nodeType":"283","messageId":"284","endLine":30,"endColumn":18},{"ruleId":"281","severity":1,"message":"307","line":76,"column":11,"nodeType":"283","messageId":"284","endLine":76,"endColumn":27},{"ruleId":"281","severity":1,"message":"307","line":97,"column":11,"nodeType":"283","messageId":"284","endLine":97,"endColumn":27},{"ruleId":"281","severity":1,"message":"307","line":72,"column":11,"nodeType":"283","messageId":"284","endLine":72,"endColumn":27},{"ruleId":"281","severity":1,"message":"303","line":1,"column":27,"nodeType":"283","messageId":"284","endLine":1,"endColumn":35},{"ruleId":"281","severity":1,"message":"317","line":14,"column":8,"nodeType":"283","messageId":"284","endLine":14,"endColumn":15},{"ruleId":"287","severity":1,"message":"293","line":24,"column":15,"nodeType":"294","endLine":26,"endColumn":6},{"ruleId":"287","severity":1,"message":"305","line":26,"column":7,"nodeType":"289","endLine":26,"endColumn":9,"suggestions":"318"},{"ruleId":"281","severity":1,"message":"285","line":27,"column":11,"nodeType":"283","messageId":"284","endLine":27,"endColumn":18},{"ruleId":"281","severity":1,"message":"312","line":30,"column":11,"nodeType":"283","messageId":"284","endLine":30,"endColumn":18},{"ruleId":"281","severity":1,"message":"303","line":1,"column":27,"nodeType":"283","messageId":"284","endLine":1,"endColumn":35},{"ruleId":"281","severity":1,"message":"317","line":14,"column":8,"nodeType":"283","messageId":"284","endLine":14,"endColumn":15},{"ruleId":"287","severity":1,"message":"293","line":24,"column":15,"nodeType":"294","endLine":26,"endColumn":6},{"ruleId":"287","severity":1,"message":"305","line":26,"column":7,"nodeType":"289","endLine":26,"endColumn":9,"suggestions":"319"},{"ruleId":"281","severity":1,"message":"285","line":27,"column":11,"nodeType":"283","messageId":"284","endLine":27,"endColumn":18},{"ruleId":"281","severity":1,"message":"312","line":31,"column":11,"nodeType":"283","messageId":"284","endLine":31,"endColumn":18},{"ruleId":"281","severity":1,"message":"307","line":72,"column":11,"nodeType":"283","messageId":"284","endLine":72,"endColumn":27},{"ruleId":"281","severity":1,"message":"307","line":70,"column":9,"nodeType":"283","messageId":"284","endLine":70,"endColumn":25},{"ruleId":"281","severity":1,"message":"303","line":1,"column":27,"nodeType":"283","messageId":"284","endLine":1,"endColumn":35},{"ruleId":"281","severity":1,"message":"317","line":14,"column":8,"nodeType":"283","messageId":"284","endLine":14,"endColumn":15},{"ruleId":"287","severity":1,"message":"293","line":24,"column":15,"nodeType":"294","endLine":26,"endColumn":6},{"ruleId":"287","severity":1,"message":"305","line":26,"column":7,"nodeType":"289","endLine":26,"endColumn":9,"suggestions":"320"},{"ruleId":"281","severity":1,"message":"285","line":27,"column":11,"nodeType":"283","messageId":"284","endLine":27,"endColumn":18},{"ruleId":"281","severity":1,"message":"312","line":31,"column":11,"nodeType":"283","messageId":"284","endLine":31,"endColumn":18},{"ruleId":"281","severity":1,"message":"307","line":70,"column":9,"nodeType":"283","messageId":"284","endLine":70,"endColumn":25},{"ruleId":"281","severity":1,"message":"307","line":72,"column":11,"nodeType":"283","messageId":"284","endLine":72,"endColumn":27},{"ruleId":"281","severity":1,"message":"303","line":1,"column":27,"nodeType":"283","messageId":"284","endLine":1,"endColumn":35},{"ruleId":"281","severity":1,"message":"317","line":14,"column":8,"nodeType":"283","messageId":"284","endLine":14,"endColumn":15},{"ruleId":"287","severity":1,"message":"293","line":24,"column":15,"nodeType":"294","endLine":26,"endColumn":6},{"ruleId":"287","severity":1,"message":"305","line":26,"column":7,"nodeType":"289","endLine":26,"endColumn":9,"suggestions":"321"},{"ruleId":"281","severity":1,"message":"285","line":27,"column":11,"nodeType":"283","messageId":"284","endLine":27,"endColumn":18},{"ruleId":"281","severity":1,"message":"312","line":32,"column":11,"nodeType":"283","messageId":"284","endLine":32,"endColumn":18},{"ruleId":"281","severity":1,"message":"307","line":72,"column":11,"nodeType":"283","messageId":"284","endLine":72,"endColumn":27},{"ruleId":"281","severity":1,"message":"307","line":70,"column":9,"nodeType":"283","messageId":"284","endLine":70,"endColumn":25},{"ruleId":"281","severity":1,"message":"307","line":70,"column":9,"nodeType":"283","messageId":"284","endLine":70,"endColumn":25},{"ruleId":"281","severity":1,"message":"307","line":72,"column":11,"nodeType":"283","messageId":"284","endLine":72,"endColumn":27},{"ruleId":"281","severity":1,"message":"303","line":1,"column":27,"nodeType":"283","messageId":"284","endLine":1,"endColumn":35},{"ruleId":"281","severity":1,"message":"317","line":14,"column":8,"nodeType":"283","messageId":"284","endLine":14,"endColumn":15},{"ruleId":"287","severity":1,"message":"293","line":24,"column":15,"nodeType":"294","endLine":26,"endColumn":6},{"ruleId":"287","severity":1,"message":"305","line":26,"column":7,"nodeType":"289","endLine":26,"endColumn":9,"suggestions":"322"},{"ruleId":"281","severity":1,"message":"285","line":27,"column":11,"nodeType":"283","messageId":"284","endLine":27,"endColumn":18},{"ruleId":"281","severity":1,"message":"312","line":31,"column":11,"nodeType":"283","messageId":"284","endLine":31,"endColumn":18},{"ruleId":"281","severity":1,"message":"307","line":70,"column":9,"nodeType":"283","messageId":"284","endLine":70,"endColumn":25},"no-native-reassign",["323"],"no-negated-in-lhs",["324"],"no-unused-vars","'created' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'stateReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["325"],"'fetchAnimals' is defined but never used.","'setAllValues' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'cepConsumer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Box' is defined but never used.","'TextField' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchAnimals'. Either include it or remove the dependency array. If 'fetchAnimals' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["326"],"'fixedHeightPaper' is assigned a value but never used.","'useEffect' is defined but never used.","'stateAll' is defined but never used.","'Link' is defined but never used.","'preventDefault' is defined but never used.","'classes' is assigned a value but never used.","'Prontuario' is defined but never used.","'bull' is assigned a value but never used.","'pelagem' is assigned a value but never used.",["327"],"'NoteAdd' is defined but never used.",["328"],["329"],["330"],["331"],["332"],"no-global-assign","no-unsafe-negation",{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"335","fix":"337"},{"desc":"335","fix":"338"},{"desc":"335","fix":"339"},{"desc":"335","fix":"340"},{"desc":"335","fix":"341"},{"desc":"335","fix":"342"},"Update the dependencies array to be: [history, success]",{"range":"343","text":"344"},"Update the dependencies array to be: [fetchAnimals]",{"range":"345","text":"346"},{"range":"347","text":"346"},{"range":"348","text":"346"},{"range":"349","text":"346"},{"range":"350","text":"346"},{"range":"351","text":"346"},{"range":"352","text":"346"},[1975,1984],"[history, success]",[1823,1825],"[fetchAnimals]",[896,898],[953,955],[953,955],[953,955],[953,955],[953,955]]